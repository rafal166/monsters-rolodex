{"version":3,"sources":["components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","components/SearchBox/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","data","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,W,MCJhB,SAASC,EAAWR,GAC/B,OACI,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAACL,EAAD,CAAuBK,QAASA,GAArBA,EAAQC,S,MCJ1C,SAASM,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC5C,OACI,uBAAOZ,UAAU,aACba,KAAK,SACLF,YAAcA,GAAe,kBAC7BG,SAAUF,I,ICFDG,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,gEASO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEf,SAAUc,S,+BAItB,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAmBjB,EAASkB,QAAO,SAACvB,GAAD,OACvCA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAACU,EAAD,CACEE,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAACxB,EAAD,CAAUC,SAAUiB,W,GA9BKO,aCMlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c370e759.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.styles.css';\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=120x120`}></img>\r\n            <h1>{props.monster.name}</h1>\r\n            <h2>{props.monster.email}</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Card from '../Card/Card.component'\r\nimport './CardList.styles.css'\r\n\r\nexport default function CardList  (props) {\r\n    return (\r\n        <div className=\"card-list\">\r\n        {props.monsters.map(monster =><Card key={monster.id} monster={monster}></Card>)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './SearchBox.styles.css'\r\n\r\nexport default function SearchBox({placeholder, handleChange}) {\r\n    return (\r\n        <input className=\"search-box\"\r\n            type=\"search\"\r\n            placeholder={ placeholder || \"monsters search\"}\r\n            onChange={handleChange}\r\n      ></input>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/CardList/CardList.component\";\n\nimport SearchBox from \"./components/SearchBox/SearchBox.component\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\") //\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ monsters: data });\n      });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters rolodex</h1>\n        <SearchBox\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        ></SearchBox>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}